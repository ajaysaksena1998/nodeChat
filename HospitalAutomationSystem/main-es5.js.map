{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/Components/change-password/change-password.component.ts","webpack:///src/app/Components/change-password/change-password.component.html","webpack:///src/app/Components/footer/footer.component.ts","webpack:///src/app/Components/footer/footer.component.html","webpack:///src/app/Components/forgot-password/forgot-password.component.ts","webpack:///src/app/Components/forgot-password/forgot-password.component.html","webpack:///src/app/Components/header/header.component.ts","webpack:///src/app/Components/header/header.component.html","webpack:///src/app/Components/host-meeting/host-meeting.component.ts","webpack:///src/app/Components/host-meeting/host-meeting.component.html","webpack:///src/app/Components/join-meeting/join-meeting.component.ts","webpack:///src/app/Components/join-meeting/join-meeting.component.html","webpack:///src/app/Components/login/login.component.ts","webpack:///src/app/Components/login/login.component.html","webpack:///src/app/Components/logout/logout.component.ts","webpack:///src/app/Components/logout/logout.component.html","webpack:///src/app/Components/otp/otp.component.ts","webpack:///src/app/Components/otp/otp.component.html","webpack:///src/app/Components/register/register.component.ts","webpack:///src/app/Components/register/register.component.html","webpack:///src/app/Components/welcome/welcome.component.ts","webpack:///src/app/Components/welcome/welcome.component.html","webpack:///src/app/Services/Guard/route-guard.service.ts","webpack:///src/app/Services/Interceptors/http-interceptor-jwt.service.ts","webpack:///src/app/Services/jwtauthentication.service.ts","webpack:///src/app/_modal/index.ts","webpack:///src/app/_modal/modal.component.ts","webpack:///src/app/_modal/modal.component.html","webpack:///src/app/_modal/modal.module.ts","webpack:///src/app/_modal/modal.service.ts","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.constant.ts","webpack:///src/app/app.module.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","ChangePasswordComponent","jwtService","router","user","getAuthUser","changePassword","password","subscribe","response","navigate","console","log","error","selector","templateUrl","styleUrls","FooterComponent","ForgotPasswordComponent","x","index","c","Math","floor","random","length","charAt","generatePassword","forgotPassword","username","HeaderComponent","jwtAuth","Doctor","doctorId","doctorname","doctoremail","designation","HostMeetingComponent","_service","room","getByUsername","name","addRoom","window","location","href","hostMeeting","JoinMeetingComponent","cookie","joinRoom","joinMeeting","LoginComponent","message","executeJWTAuthenticationService","data","invalidLogin","handleJWTLogin","LogoutComponent","logout","OtpComponent","ActiRouter","upo","UPO","queryParams","p1","p2","p3","o","p4","send","setTimeout","deleteForOtp","registerotp","submitOTP","otp","RegisterComponent","m","checker","bool","numbers","err","opt","registered","register","Register","i","generateOtp","confirm","RegisteringUsers","skipLocationChange","RegisterUser","WelcomeComponent","page","title","subtitle","content","image","getAuthenticatedUser","RouteGuardService","jwtAuthentication","route","state","isAuthenticated","providedIn","HttpInterceptorJwtService","jwtAuthenticationService","request","next","authenticationToken","getAuthenticationToken","basicAuthHeader","clone","setHeaders","Authorization","handle","USER","TOKEN","JWTAuthenticationService","_http","post","pipe","sessionStorage","setItem","token","getItem","u","use","removeItem","AuthenticationBean","ModalComponent","modalService","el","element","nativeElement","document","body","appendChild","addEventListener","target","className","close","add","remove","style","display","classList","encapsulation","None","ModalModule","imports","declarations","ModalService","modals","modal","push","filter","find","open","routes","path","pathMatch","redirectTo","component","canActivate","AppRoutingModule","forRoot","AppComponent","URI","AppModule","provide","useClass","multi","providers","bootstrap","environment","production","bootstrapModule"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit } from '@angular/core';\nimport { JWTAuthenticationService } from 'src/app/Services/jwtauthentication.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-change-password',\n  templateUrl: './change-password.component.html',\n  styleUrls: ['./change-password.component.css']\n})\nexport class ChangePasswordComponent implements OnInit {\n\n  user:any;\n  password:any;\n\n\n  constructor( private jwtService: JWTAuthenticationService, private router:Router) { }\n\n  ngOnInit(): void {\n\n    this.user= this.jwtService.getAuthUser();\n\n  }\n\n  changePassword():any{\n\n    this.jwtService.changePassword({\n      \"username\":this.user,\n      \"password\":this.password\n    }).subscribe((response:any)=>{\n      if(response==true){\n        this.router.navigate(['welcome']);\n      }\n      else{\n        console.log(\"Some Error Occurred\");\n      }\n    },(error:any)=>{\n      console.log(error);\n    }\n    )\n\n  }\n\n}\n","<body>\n    <div id=\"login\">\n    <h3 class=\"text-center text-black pt-5\">Please Login</h3>\n    <div class=\"container\">\n        <div id=\"login-row\" class=\"row justify-content-center align-items-center\">\n            <div id=\"login-column\" class=\"col-md-6\">\n                <div id=\"login-box\" class=\"col-md-12\">\n                    <!-- <div class=\"alert alert-warning\" *ngIf=\" todoForm.dirty && todoForm.invalid\">Please Enter Valid Values</div> -->\n                    <!-- <div class=\"alert alert-warning\" *ngIf=\" name.dirty && name.invalid\">Username cannot be empty</div>\n                    <div class=\"alert alert-warning\" *ngIf=\" pass.dirty && pass.invalid\">Password cannot be empty</div> -->\n                    <form id=\"login-form\" class=\"form\" #login=\"ngForm\" (ngSubmit)=\"!login.invalid && changePassword()\">\n                        <h3 class=\"text-center text-info\">Login</h3>\n                        <div class=\"form-group\">\n                            <label for=\"username\" class=\"text-info\">Email</label><br>\n                            <input type=\"text\" #name=\"ngModel\" [(ngModel)]=\"user\" name=\"user\" id=\"username\" class=\"form-control\" readonly>\n                        </div>\n                        <div class=\"form-group\">\n                            <label for=\"password\" class=\"text-info\">Password</label><br>\n                            <input type=\"password\" #pass=\"ngModel\" [(ngModel)]=\"password\" name=\"password\" id=\"password\" class=\"form-control\" required=\"required\" minlength=\"5\">\n                            <div *ngIf=\"pass.invalid && (pass.dirty || pass.touched)\">\n\n                                <div *ngIf=\"pass.errors.required\" style=\"color: red;\">\n                                  Password is required.\n                                </div>\n                                <div *ngIf=\"pass.errors.minlength\" style=\"color: red;\">\n                                    Password needs to be of minimum 5 characters\n                                  </div>\n                              </div>\n                        </div>\n                        <div class=\"form-group\">\n                            <br>                \n                            <input type=\"submit\" name=\"submit\" class=\"btn btn-info btn-md\" value=\"Update\">\n                        </div><br>\n                    </form>\n                    <br><br>\n                </div>\n            </div>\n        </div>\n    </div>\n    </div>\n     <!-- <script type=\"text/javascript\">\n        function disappear() { \n                setTimeout(function() { \n                    $('#disa').fadeOut('fast'); \n                }, 1000);\n</script> -->\n</body>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<footer class=\"footer\">\n    <div class=\"container white\">\n\n        All rights reserved 2020\n\n\n    </div>\n</footer>\n\n","import { Component, OnInit } from '@angular/core';\nimport { JWTAuthenticationService } from 'src/app/Services/jwtauthentication.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-forgot-password',\n  templateUrl: './forgot-password.component.html',\n  styleUrls: ['./forgot-password.component.css']\n})\nexport class ForgotPasswordComponent implements OnInit {\n\n  username:any;\n\n  error:any=false;\n\n  x:string=\"1234567890ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\n\n  index:any;\n\n  upp:any;\n  c:any;\n  password:string=\"\"\n\n\n  constructor( private jwtService: JWTAuthenticationService, private router:Router) { }\n\n  ngOnInit(): void {\n  }\n\n  generatePassword():any{\n\n    for(this.index=1; this.index<=10; this.index++){\n      this.c = Math.floor((Math.random()*(this.x.length))+0);\n      this.password+=this.x.charAt(this.c);\n    }\n\n  }\n\n  forgotPassword():any{\n\n    this.generatePassword();\n\n    this.jwtService.forgotPassword({\n      \"username\":this.username,\n      \"password\":this.password\n    }).subscribe((response:any)=>{\n      if(response==true){\n        this.error=false;\n        this.router.navigate(['login']);\n      }\n      else{\n        this.error=true;\n      }\n    },(error:any)=>{\n      console.log(error);\n    })\n\n\n\n  }\n\n\n}\n","<body>\n    <div id=\"login\">\n    <h3 class=\"text-center text-black pt-5\">Forgot Password</h3>\n    <div class=\"container\">\n        <div id=\"login-row\" class=\"row justify-content-center align-items-center\">\n            <div id=\"login-column\" class=\"col-md-6\">\n                <div id=\"login-box\" class=\"col-md-12\">\n                    <form id=\"login-form\" class=\"form\" #reg=\"ngForm\" (ngSubmit)=\"!reg.invalid && forgotPassword()\">\n                        <h3 class=\"text-center text-info\">Email Id</h3>\n                        <div class=\"form-group\">\n                            <label for=\"user\" class=\"text-info\">Email Id</label><br>\n                            <input type=\"text\" #n=\"ngModel\"  [(ngModel)]=\"username\" name=\"username\" id=\"user\" class=\"form-control\" required=\"required\">\n\n                            <div *ngIf=\"n.invalid && (n.dirty || n.touched)\" style=\"color: red;\">\n\n                                <div *ngIf=\"n.errors.required\">\n                                  Email Id is required.\n                                </div>\n                              </div>\n                        </div>\n                        \n                        <div class=\"form-group\">\n                            <br>\n                            <input type=\"submit\"  name=\"submit\" class=\"btn btn-info btn-md\" value=\"Reset\">\n                        </div>\n                    </form>\n                    <br>\n                    <!-- <pre class=\"alert alert-warning\" id=\"disa\" *ngIf=\"bool\">{{registered}}</pre> -->\n                    <pre class=\"alert alert-warning\" *ngIf=\"error\">Email Id is not registered</pre> \n                </div>\n            </div>\n        </div>\n    </div>\n    </div>\n</body>\n","import { Component, OnInit } from '@angular/core';\nimport { JWTAuthenticationService } from 'src/app/Services/jwtauthentication.service';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor(public jwtAuth: JWTAuthenticationService ) { }\n\n  ngOnInit(): void {\n  }\n}\n\nexport class Doctor{\n  constructor( public doctorId:number, public doctorname:string, public doctoremail:string, public designation:string) { }\n}\n","<header>\n  <nav class=\"navbar navbar-expand-lg navbar-dark dark\">\n    <a class=\"navbar-brand\" style=\"color: white;\">VEUBE</a>\n    <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarText\" aria-controls=\"navbarText\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n      <span class=\"navbar-toggler-icon\"></span>\n    </button>\n    <div class=\"collapse navbar-collapse\" id=\"navbarText\">\n      <ul class=\"navbar-nav mr-auto\">\n        <li class=\"nav-item active\">\n          <a class=\"nav-link\" routerLink=\"/welcome\" *ngIf=\"jwtAuth.isAuthenticated()\">Home <span class=\"sr-only\">(current)</span></a>\n        </li>\n        <li class=\"nav-item active\">\n          <a class=\"nav-link d\" *ngIf=\"jwtAuth.isAuthenticated()\" routerLink=\"joinMeeting\">Join Meeting\n            <span class=\"s\">Click here to Join Meeting</span>\n          </a>\n        </li>\n        <li class=\"nav-item active\">\n          <a class=\"nav-link ab\" *ngIf=\"jwtAuth.isAuthenticated()\" routerLink=\"hostMeeting\">Host Meeting\n            <span class=\"cd\">Click here to Host Meeting</span>\n          </a>\n        </li>\n        <li class=\"nav-item active\">\n          <a class=\"nav-link ef\" *ngIf=\"jwtAuth.isAuthenticated()\" routerLink=\"changePassword\">Change Password\n            <span class=\"gh\">Change Your Account Password</span>\n          </a>\n        </li>\n      </ul>\n    <ul class=\"navbar-nav navbar-right\">\n        <li class=\"nav-item\"> <a class=\"nav-link whi r\" style=\"color: white;\" href=\"#\" *ngIf=\"!jwtAuth.isAuthenticated()\">Login\n          <span class=\"p\">Login</span>\n        </a></li>\n\n        <li class=\"nav-item\"> <a class=\"nav-link whi m\" style=\"color: white;\" routerLink='/logout' href=\"#\" *ngIf=\"jwtAuth.isAuthenticated()\">Logout\n          <span class=\"n\">Logout</span>\n        </a></li>\n    </ul>\n    </div>\n  </nav>\n</header>\n\n\n\n","import { Component, OnInit } from '@angular/core';\nimport { JWTAuthenticationService } from 'src/app/Services/jwtauthentication.service';\n\n@Component({\n  selector: 'app-host-meeting',\n  templateUrl: './host-meeting.component.html',\n  styleUrls: ['./host-meeting.component.css']\n})\nexport class HostMeetingComponent implements OnInit {\n\n  username:any;\n  room:any;\n  error:any=false;\n  x:string=\"1234567890ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\n\n  index:any;\n  c:any;\n\n\n  constructor( private _service: JWTAuthenticationService) { }\n\n  ngOnInit(): void {\n\n    this.room=\"\"\n\n    this._service.getByUsername().subscribe((response:any)=>{\n      console.log(response)\n      this.username=response.name;\n    },(error:any)=>{\n      console.log(error);\n    })\n\n\n  }\n\n  generatePassword():any{\n\n    for(this.index=1; this.index<=7; this.index++){\n      this.c = Math.floor((Math.random()*(this.x.length))+0);\n      this.room+=this.x.charAt(this.c);\n    }\n  }\n\n  hostMeeting():any{\n\n    this.generatePassword();\n\n    this._service.addRoom(this.room, this.username).subscribe((response:any)=>{\n      if(response==true){\n        window.location.href = 'http://localhost:3000'+'?room='+this.room;\n        this.error=false;\n      }\n      else{\n        this.error=true;\n      }\n    })\n\n  }\n\n}\n","<!DOCTYPE html>\n<html>\n    <head>\n        <title>Chat Application</title>\n        <link rel=\"icon\" href=\"../../../assets/logo.PNG\">\n    </head>\n    <body>\n\n        <div class=\"centered-form\">\n            <div class=\"centered-form__box\">\n                <h1>Host Meeting</h1>\n                <form>\n                    <!-- <label>Host Name</label>\n                    <input type=\"text\" [(ngModel)]=\"username\" name=\"username\" placeholder=\"Host name\" required autocomplete=\"off\"> -->\n                    <label>Room</label>\n                    <input type=\"text\" [(ngModel)]=\"room\" name=\"room\" placeholder=\"Room\" required autocomplete=\"off\">\n                    <button (click)=\"hostMeeting()\">Host</button>\n                </form>\n                <br>\n                <pre class=\"alert alert-warning\" *ngIf=\"error\">Room already exists!!!</pre>\n            </div>\n        </div>\n    </body>\n</html>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { CookieService } from 'ngx-cookie-service';\nimport { JWTAuthenticationService } from 'src/app/Services/jwtauthentication.service';\n\n@Component({\n  selector: 'app-join-meeting',\n  templateUrl: './join-meeting.component.html',\n  styleUrls: ['./join-meeting.component.css']\n})\nexport class JoinMeetingComponent implements OnInit {\n\n  username:any;\n  room:any;\n  error:any=false;\n\n\n  constructor( private router : Router, private cookie:CookieService, private _service:JWTAuthenticationService) { }\n\n  ngOnInit(): void {\n\n    this.error=false;\n\n    this._service.getByUsername().subscribe((response:any)=>{\n      console.log(response)\n      this.username=response.name;\n    },(error:any)=>{\n      console.log(error);\n    })\n  }\n\n\n  joinMeeting():any{\n\n    this._service.joinRoom(this.room, this.username).subscribe((response:any)=>{\n      if(response==true){\n        window.location.href = 'http://localhost:3000/?'+'room='+this.room;\n        this.error=false;\n      }\n      else{\n        this.error=true;\n      }\n     \n    })    \n  }\n\n}\n","<!DOCTYPE html>\n<html>\n    <head>\n        <title>Chat Application</title>\n        <link rel=\"icon\" href=\"../../../assets/logo.PNG\">\n    </head>\n    <body>\n\n        <div class=\"centered-form\">\n            <div class=\"centered-form__box\">\n                <h1>Join</h1>\n                <form>\n                    <!-- <label>Display name</label>\n                    <input type=\"text\" [(ngModel)]=\"username\" name=\"username\" placeholder=\"Display name\" required autocomplete=\"off\"> -->\n                    <label>Room</label>\n                    <input type=\"text\" [(ngModel)]=\"room\" name=\"room\" placeholder=\"Room\" required autocomplete=\"off\">\n                    <button (click)=\"joinMeeting()\">Join</button>\n                </form>\n                <br>\n                <pre class=\"alert alert-warning\" *ngIf=\"error\">Room does not exist!!!</pre>\n            </div>\n        </div>\n    </body>\n</html>","import { Component, OnInit } from '@angular/core';\nimport { JWTAuthenticationService } from 'src/app/Services/jwtauthentication.service';\nimport { Router } from '@angular/router';\n\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  username:any;\n  name:any;\n  pass:any;\n  password:any;\n  invalidLogin:boolean;\n  message:string=\"Please enter valid credentials\";\n\n  constructor( private _service: JWTAuthenticationService, private router: Router) { }\n\n  ngOnInit(): void {\n  }\n\n  handleJWTLogin():any{\n    this._service.executeJWTAuthenticationService(this.username, this.password).subscribe((data:any)=>{\n      console.log(data);\n      this.invalidLogin=false;\n      this.router.navigate(['welcome']);\n    },\n    (error:any)=>{\n      console.log(error);\n      this.invalidLogin=true;\n    })\n  }\n}\n","<body>\n    <div id=\"login\">\n    <h3 class=\"text-center text-black pt-5\">Please Login</h3>\n    <div class=\"container\">\n        <div id=\"login-row\" class=\"row justify-content-center align-items-center\">\n            <div id=\"login-column\" class=\"col-md-6\">\n                <div id=\"login-box\" class=\"col-md-12\">\n                    <!-- <div class=\"alert alert-warning\" *ngIf=\" todoForm.dirty && todoForm.invalid\">Please Enter Valid Values</div> -->\n                    <!-- <div class=\"alert alert-warning\" *ngIf=\" name.dirty && name.invalid\">Username cannot be empty</div>\n                    <div class=\"alert alert-warning\" *ngIf=\" pass.dirty && pass.invalid\">Password cannot be empty</div> -->\n                    <form id=\"login-form\" class=\"form\" #login=\"ngForm\" (ngSubmit)=\"!login.invalid && handleJWTLogin()\">\n                        <h3 class=\"text-center text-info\">Login</h3>\n                        <div class=\"form-group\">\n                            <label for=\"username\" class=\"text-info\">Email</label><br>\n                            <input type=\"text\" #name=\"ngModel\" [(ngModel)]=\"username\" name=\"username\" id=\"username\" class=\"form-control\" required=\"required\">\n                            <div *ngIf=\"name.invalid && (name.dirty || name.touched)\" style=\"color: red;\">\n\n                                <div *ngIf=\"name.errors.required\">\n                                  User Name is required.\n                                </div>\n                              \n                              </div>\n                        </div>\n\n                        <div class=\"form-group\">\n                            <label for=\"password\" class=\"text-info\">Password</label><br>\n                            <input type=\"password\" #pass=\"ngModel\" [(ngModel)]=\"password\" name=\"password\" id=\"password\" class=\"form-control\" required=\"required\">\n                            <div *ngIf=\"pass.invalid && (pass.dirty || pass.touched)\">\n\n                                <div *ngIf=\"pass.errors.required\" style=\"color: red;\">\n                                  Password is required.\n                                </div>\n                              \n                              </div>\n                        </div>\n                        <div class=\"form-group\">\n                            <br>                \n                            <input type=\"submit\" name=\"submit\" class=\"btn btn-info btn-md\" value=\"Login\">\n                        </div><br>\n                        <div id=\"register-link\" class=\"text-right\">\n                            <a routerLink=\"/register\" class=\"text-info\">Register</a>\n                        </div>\n                        <br>\n                        <br><br><br>\n                        <div id=\"register-link\" class=\"text-right\">\n                            <a routerLink=\"/forgotpassword\" class=\"text-info\">Forgot Your Password</a>\n                        </div>\n                    </form>\n                    <br><br>\n                    <pre class=\"alert alert-warning\" id=\"disa\" *ngIf=\"invalidLogin\">{{message}}</pre>\n                </div>\n            </div>\n        </div>\n    </div>\n    </div>\n     <!-- <script type=\"text/javascript\">\n        function disappear() { \n                setTimeout(function() { \n                    $('#disa').fadeOut('fast'); \n                }, 1000);\n</script> -->\n</body>\n","import { Component, OnInit } from '@angular/core';\nimport { JWTAuthenticationService } from 'src/app/Services/jwtauthentication.service';\n\n@Component({\n  selector: 'app-logout',\n  templateUrl: './logout.component.html',\n  styleUrls: ['./logout.component.css']\n})\nexport class LogoutComponent implements OnInit {\n\n  constructor( private jwtAuth: JWTAuthenticationService) { }\n\n  ngOnInit(): void {\n    this.jwtAuth.logout();\n  }\n\n}\n","<body>\n<div class=\"container\">\n    <h3>Thank You for using our website</h3>\n</div>\n</body>","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { JWTAuthenticationService } from 'src/app/Services/jwtauthentication.service';\n\n@Component({\n  selector: 'app-otp',\n  templateUrl: './otp.component.html',\n  styleUrls: ['./otp.component.css']\n})\nexport class OtpComponent implements OnInit {\n\n  otp:any;\n  error:any=false;\n  upo:UPO;\n  data:any;\n  o:any;\n  send:any;\n  constructor( private ActiRouter: ActivatedRoute, private jwtService:JWTAuthenticationService, private router:Router) { }\n\n  ngOnInit(): void {\n\n\n    this.upo= new UPO(\"\",\"\",\"\",\"\");\n\n    this.ActiRouter.queryParams.subscribe((response:any)=>{\n      // this.upo.username= response.p1;\n      // this.upo.password= response.p2;\n      this.data=response;\n      console.log(response);\n    })\n\n    this.upo.username=this.data.p1;\n    this.upo.password=this.data.p2;\n    this.upo.name=this.data.p3;\n    this.o=this.data.p4;\n\n    this.send={\n      \"username\":this.upo.username,\n      \"otp\":this.o\n    }\n\n    setTimeout(()=>{\n      this.jwtService.deleteForOtp(this.send).subscribe((response:any)=>{\n        if(response==true){\n          console.log(\"Deletion Successful\");\n        }\n        else{\n          console.log(\"Some problem in deletion occured\");\n        }\n      },(error:any)=>{\n        console.log(error);\n      })\n    },300000);\n  }\n\n  // deleteOtp():any{\n  //   this.jwtService.deleteForOtp(this.send).subscribe((response:any)=>{\n  //     if(response==true){\n  //       console.log(\"Deletion Successful\");\n  //     }\n  //     else{\n  //       console.log(\"Some problem in deletion occured\");\n  //     }\n  //   },(error:any)=>{\n  //     console.log(error);\n\n  //   })\n  // }\n\n  submitOTP():any{\n\n    this.jwtService.registerotp(this.upo).subscribe((response:any)=>{\n      if(response==true){\n        this.error=false;\n        this.router.navigate(['login']);\n      }\n      else{\n        this.error=true;\n      }\n    },(error:any)=>{\n      console.log(error);\n    })\n\n  }\n\n}\n\nexport class UPO{\n  constructor( public username:string, public password:string, public otp:string, public name:string ) { }\n}\n","<body>\n    <div id=\"login\">\n    <h3 class=\"text-center text-black pt-5\">Please Enter Otp</h3>\n    <div class=\"container\">\n        <div id=\"login-row\" class=\"row justify-content-center align-items-center\">\n            <div id=\"login-column\" class=\"col-md-6\">\n                <div id=\"login-box\" class=\"col-md-12\">\n                    <form id=\"login-form\" class=\"form\" #reg=\"ngForm\" (ngSubmit)=\"!reg.invalid && submitOTP()\">\n                        <h3 class=\"text-center text-info\">Otp</h3>\n                        <h6 class=\"text-center text-info\">Otp is valid only for 5 minutes</h6>\n                        <div class=\"form-group\">\n                            <label for=\"username\" class=\"text-info\">OTP</label><br>\n                            <input type=\"text\" #n=\"ngModel\"  [(ngModel)]=\"upo.otp\" name=\"otp\" id=\"username\" class=\"form-control\" required=\"required\" minlength=\"7\" maxlength=\"7\">\n\n                            <div *ngIf=\"n.invalid && (n.dirty || n.touched)\" style=\"color: red;\">\n\n                                <div *ngIf=\"n.errors.required\">\n                                  Otp is required.\n                                </div>\n                                <div *ngIf=\"n.errors.minlength\">\n                                    Otp should be of 7 characters\n                                  </div>\n                                  <div *ngIf=\"n.errors.maxlength\">\n                                    Otp should be of 7 characters\n                                  </div>\n                              </div>\n                        </div>\n                        \n                        <div class=\"form-group\">\n                            <br>\n                            <input type=\"submit\"  name=\"submit\" class=\"btn btn-info btn-md\" value=\"Verify\">\n                        </div>\n                    </form>\n                    <br>\n                    <!-- <pre class=\"alert alert-warning\" id=\"disa\" *ngIf=\"bool\">{{registered}}</pre> -->\n                    <pre class=\"alert alert-warning\" *ngIf=\"error\">Invalid Otp entered</pre> \n                </div>\n            </div>\n        </div>\n    </div>\n    </div>\n</body>\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { JWTAuthenticationService } from 'src/app/Services/jwtauthentication.service';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n\n  register:Register;\n  otp:any;\n  m:any=\"\";\n  checker:any=\"\";\n  bool:boolean=false;\n  numbers:any= \"0123456789\";\n  err:boolean= false;\n  i:any;\n  o:string;\n  opt:string=\"\";\n  registered:string=\"Successfully Registered\";\n  error:string=\"Some Error Occured!! Please contact ADMIN!!!\"\n  confirm:any;\n  constructor( private _service: JWTAuthenticationService, private router:Router ) { }\n\n  ngOnInit(): void {\n    this.register= new Register(\"\",\"\",\"\",\"\");\n  \n  }\n\n  generateOtp(){\n\n\n    for(this.i=0; this.i<7; this.i++){\n      this.opt+=Math.floor(Math.random()*10)\n    }\n\n    return this.opt;\n    \n  }\n\n  RegisterUser():any{\n    this.checker=\"\";\n    this.o = this.generateOtp()\n    this.register.otp=this.o;\n    if(this.register.password==this.confirm){\n      console.log(this.register)\n      this._service.RegisteringUsers(this.register).subscribe((response:any)=>{\n        if(response==true){\n          this.bool=true;\n          this.err=false;\n          this.confirm=\"\";\n          this.router.navigate(['/otp'], {\n            queryParams: {p1:this.register.username, p2:this.register.password,p3:this.register.name,p4:this.register.otp},\n            skipLocationChange: true\n          });\n        }\n        else{\n          this.bool=false;\n          this.err=true;\n        }\n      })\n    }\n    else{\n      this.checker= \"Passwords do not match\";\n      this.confirm=\"\";\n    }\n    \n  }\n}\n\nexport class Register{\n  constructor( public name:string, public username:string, public password:string, public otp:string) { }\n}\n","<body>\n    <div id=\"login\">\n    <h3 class=\"text-center text-black pt-5\">Please Register</h3>\n    <div class=\"container\">\n        <div id=\"login-row\" class=\"row justify-content-center align-items-center\">\n            <div id=\"login-column\" class=\"col-md-6\">\n                <div id=\"login-box\" class=\"col-md-12\">\n                    <form id=\"login-form\" class=\"form\" #reg=\"ngForm\" (ngSubmit)=\"!reg.invalid && RegisterUser()\">\n                        <h3 class=\"text-center text-info\">Register</h3>\n                        <div class=\"form-group\">\n                            <label for=\"username\" class=\"text-info\">Name</label><br>\n                            <input type=\"text\" #n=\"ngModel\"  [(ngModel)]=\"register.name\" name=\"name\" id=\"username\" class=\"form-control\" required=\"required\">\n\n                            <div *ngIf=\"n.invalid && (n.dirty || n.touched)\" style=\"color: red;\">\n\n                                <div *ngIf=\"n.errors.required\">\n                                  Name is required.\n                                </div>\n                              \n                        </div>\n                        </div>\n\n                        <div class=\"form-group\">\n                        <label for=\"username\" class=\"text-info\">Email</label><br>\n                            <input type=\"text\" #name=\"ngModel\"  [(ngModel)]=\"register.username\" name=\"username\" id=\"username\" class=\"form-control\" required=\"required\" minlength=\"5\">\n                            <div *ngIf=\"name.invalid && (name.dirty || name.touched)\" style=\"color: red;\">\n\n                                <div *ngIf=\"name.errors.required\">\n                                  User Name is required.\n                                </div>\n                                <div *ngIf=\"name.errors.minlength\">\n                                    User Name must be of minimum 5 characters\n                                  </div>\n                              </div>\n                        </div>\n\n                        <div class=\"form-group\">\n                            <label for=\"username\" class=\"text-info\">Image Upload</label><br>\n                                <input type=\"file\" id=\"username\" class=\"form-control\">\n                            </div>\n                    \n                        <div class=\"form-group\">\n                            <label for=\"password\" class=\"text-info\">Password</label><br>\n                            <input type=\"password\" #pass=\"ngModel\" [(ngModel)]=\"register.password\" name=\"password\" id=\"password\" class=\"form-control\" required=\"required\" minlength=\"5\">\n                            <div *ngIf=\"pass.invalid && (pass.dirty || pass.touched)\" style=\"color: red;\">\n\n                                <div *ngIf=\"pass.errors.required\">\n                                  Password is required.\n                                </div>\n                                <div *ngIf=\"pass.errors.minlength\">\n                                    Password must be of minimum 5 characters\n                                  </div>\n                              </div>\n                        </div>\n                        <div class=\"form-group\">\n                            <label for=\"password\" class=\"text-info\">Confirm Password</label><br>\n                            <input type=\"password\"#c=\"ngModel\" id=\"password\" class=\"form-control\" name=\"confirm\" [(ngModel)]=\"confirm\">\n                            <div *ngIf=\"checker!=null\" style=\"color: red;\">{{checker}}</div>\n                        </div>\n                        <div class=\"form-group\">\n                        \n                            <input type=\"submit\"  name=\"submit\" class=\"btn btn-info btn-md\" value=\"Register\">\n                        </div><br>\n                        <div id=\"register-link\" class=\"text-right\">\n                            <a routerLink=\"/login\" class=\"text-info\">Login</a>\n                        </div>\n                    </form>\n                    <br><br>\n                    <pre class=\"alert alert-warning\" id=\"disa\" *ngIf=\"bool\">{{registered}}</pre>\n                    <pre class=\"alert alert-warning\" id=\"disa\" *ngIf=\"err\">{{error}}</pre>\n                </div>\n            </div>\n        </div>\n    </div>\n    </div>\n</body>\n","import { Component, OnInit } from '@angular/core';\nimport { JWTAuthenticationService } from 'src/app/Services/jwtauthentication.service';\n\n@Component({\n  selector: 'app-welcome',\n  templateUrl: './welcome.component.html',\n  styleUrls: ['./welcome.component.css']\n})\nexport class WelcomeComponent implements OnInit {\n\n  page = {\n    title: 'Home',\n    subtitle: 'Welcome Home!',\n    content: 'Some home content.',\n    image: 'assets/bg00.jpeg'\n  };\n\n  data:any;\n  user:any;\n\n  constructor( private _service: JWTAuthenticationService) { }\n\n  ngOnInit(): void {\n\n    this.user= this._service.getAuthenticatedUser();\n\n    }\n  \n}\n","<body>\n    <div class=\"container\">\n<section class=\"hero is-info is-fullheight is-bold\">\n    <div class=\"hero-body\">\n\n      <h1 class=\"title\">Welcome {{user}}</h1>\n\n    \n    </div>\n    </section>\n    </div>\n    </body>","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\nimport { JWTAuthenticationService } from '../jwtauthentication.service';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RouteGuardService implements CanActivate {\n\n  constructor( private jwtAuthentication : JWTAuthenticationService, private router: Router) { }\n\n\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot):boolean {\n    if(this.jwtAuthentication.isAuthenticated()){\n      return true;\n    }\n\n    this.router.navigate(['login']);\n    return false;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpInterceptor, HttpRequest, HttpHandler } from '@angular/common/http';\nimport { JWTAuthenticationService } from '../jwtauthentication.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HttpInterceptorJwtService implements HttpInterceptor {\n\n  constructor( private jwtAuthenticationService : JWTAuthenticationService) { }\n\n  intercept(request: HttpRequest<any>, next: HttpHandler){\n    let authenticationToken = this.jwtAuthenticationService.getAuthenticationToken();\n    let username = this.jwtAuthenticationService.getAuthenticatedUser();\n\n    let basicAuthHeader = authenticationToken;\n    if(authenticationToken && username)\n    {\n      request= request.clone({\n        setHeaders:{\n          Authorization: basicAuthHeader\n        }\n      })\n    }\n    return next.handle(request);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\nimport { URI } from '../app.constant';\nexport const USER= 'auth-user';\nexport const TOKEN='auth-token';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class JWTAuthenticationService {\n\n  b:any;\n\n  constructor(private _http: HttpClient) { }\n\n  executeJWTAuthenticationService(username:any,password:any):any{\n\n    return  this._http.post<any>(`${URI}/authenticate`,{\n      username,\n      password\n    }).pipe(map(data=>{\n      sessionStorage.setItem(USER,username);\n      sessionStorage.setItem(TOKEN,`Bearer ${data.token}`);\n      return data;\n    }));\n  }\n\n  RegisteringUsers(data:any):any{\n    return this._http.post(`${URI}/otpgenerated`,data);\n  }\n\n\n  deleteForOtp(data:any):any{\n    return this._http.post(`${URI}/deleteForOtp`,data);\n  }\n\n\n  isAuthenticated(){\n    let user = sessionStorage.getItem(USER);\n    return !(user==null);\n  }\n  getAuthUser():any{\n    return sessionStorage.getItem(USER);\n  }\n\n  registerotp(data:any):any{\n    return this._http.post(`${URI}/register`,data);\n  }\n\n  getByUsername():any{\n    let username = sessionStorage.getItem('auth-user');\n    const u= { \"username\": username}\n    console.log(u)\n    return this._http.post(`${URI}/getUsername`,u);\n  }\n\n  changePassword(data:any):any{\n    return this._http.post(`${URI}/changePassword`,data);\n  }\n\n\n  forgotPassword(data:any):any{\n    return this._http.post(`${URI}/forgotPassword`,data);\n  }\n\n\n  addRoom(room:any, use:any):any{\n    let username = sessionStorage.getItem('auth-user');\n    return this._http.post(`${URI}/addRooms`,{\n      \"username\":username,\n      \"room\":room,\n      \"name\":use\n    });\n  }\n\n  joinRoom(room:any, use:any):any{\n    let username = sessionStorage.getItem('auth-user');\n    return this._http.post(`${URI}/joinRooms`,{\n      \"username\":username,\n      \"room\":room,\n      \"name\":use\n    })\n  }\n\n\n\n  // executeAuthenticationService(username:any,password:any):any{\n  //   let basicAuthHeader= \"Basic \"+window.btoa(username+':'+ password);\n  //   let headers= new HttpHeaders({\n  //     Authorization: basicAuthHeader\n  //   })\n  //   return  this._http.get<AuthenticationBean>(`${URI}/basicAuth`,{headers}).pipe(map(data=>{\n  //     sessionStorage.setItem(USER,username);\n  //     sessionStorage.setItem(TOKEN,basicAuthHeader);\n  //     return data;\n  //   }));\n  // }\n\n  getAuthenticatedUser():any{\n    return sessionStorage.getItem(USER);\n  }\n\n  getAuthenticationToken():any{\n    return sessionStorage.getItem(TOKEN);\n  }\n\n  logout(){\n    sessionStorage.removeItem(USER);\n    sessionStorage.removeItem(TOKEN);\n  }\n}\n\nexport class AuthenticationBean{\n  constructor(public message:string) { }\n}\n","export * from './modal.module';\r\nexport * from './modal.service';","import { Component, ViewEncapsulation, ElementRef, Input, OnInit, OnDestroy } from '@angular/core';\r\n\r\nimport { ModalService } from './modal.service';\r\n\r\n@Component({ \r\n    selector: 'jw-modal', \r\n    templateUrl: 'modal.component.html', \r\n    styleUrls: ['modal.component.less'],\r\n    encapsulation: ViewEncapsulation.None\r\n})\r\nexport class ModalComponent implements OnInit, OnDestroy {\r\n    @Input() id: string;\r\n    private element: any;\r\n\r\n    constructor(private modalService: ModalService, private el: ElementRef) {\r\n        this.element = el.nativeElement;\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        // ensure id attribute exists\r\n        if (!this.id) {\r\n            console.error('modal must have an id');\r\n            return;\r\n        }\r\n\r\n        // move element to bottom of page (just before </body>) so it can be displayed above everything else\r\n        document.body.appendChild(this.element);\r\n\r\n        // close modal on background click\r\n        this.element.addEventListener('click', el => {\r\n            if (el.target.className === 'jw-modal') {\r\n                this.close();\r\n            }\r\n        });\r\n\r\n        // add self (this modal instance) to the modal service so it's accessible from controllers\r\n        this.modalService.add(this);\r\n    }\r\n\r\n    // remove self from modal service when component is destroyed\r\n    ngOnDestroy(): void {\r\n        this.modalService.remove(this.id);\r\n        this.element.remove();\r\n    }\r\n\r\n    // open modal\r\n    open(): void {\r\n        this.element.style.display = 'block';\r\n        document.body.classList.add('jw-modal-open');\r\n    }\r\n\r\n    // close modal\r\n    close(): void {\r\n        this.element.style.display = 'none';\r\n        document.body.classList.remove('jw-modal-open');\r\n    }\r\n}","\r\n﻿<div class=\"jw-modal\">\r\n    <div class=\"jw-modal-body\">\r\n        <ng-content></ng-content>\r\n    </div>\r\n</div>\r\n<div class=\"jw-modal-background\"></div>","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { ModalComponent } from './modal.component';\r\n\r\n@NgModule({\r\n    imports: [CommonModule],\r\n    declarations: [ModalComponent],\r\n    exports: [ModalComponent]\r\n})\r\nexport class ModalModule { }","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class ModalService {\r\n    private modals: any[] = [];\r\n\r\n    add(modal: any) {\r\n        // add modal to array of active modals\r\n        this.modals.push(modal);\r\n    }\r\n\r\n    remove(id: string) {\r\n        // remove modal from array of active modals\r\n        this.modals = this.modals.filter(x => x.id !== id);\r\n    }\r\n\r\n    open(id: string) {\r\n        // open modal specified by id\r\n        const modal = this.modals.find(x => x.id === id);\r\n        modal.open();\r\n    }\r\n\r\n    close(id: string) {\r\n        // close modal specified by id\r\n        const modal = this.modals.find(x => x.id === id);\r\n        modal.close();\r\n    }\r\n}","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginComponent } from './Components/login/login.component';\nimport { RegisterComponent } from './Components/register/register.component';\nimport { WelcomeComponent } from './Components/welcome/welcome.component';\nimport { LogoutComponent } from './Components/logout/logout.component';\nimport { RouteGuardService } from './Services/Guard/route-guard.service';\nimport { JoinMeetingComponent } from './Components/join-meeting/join-meeting.component';\nimport { url } from 'inspector';\nimport { HostMeetingComponent } from './Components/host-meeting/host-meeting.component';\nimport { OtpComponent } from './Components/otp/otp.component';\nimport { ForgotPasswordComponent } from './Components/forgot-password/forgot-password.component';\nimport { ChangePasswordComponent } from './Components/change-password/change-password.component';\n\n\nconst routes: Routes = [\n  {\n    path: '',\n    pathMatch: 'full',\n    redirectTo: \"login\"\n  },\n  {\n    path:'login',\n    component: LoginComponent\n  },\n  {\n    path:'register',\n    component: RegisterComponent\n  },\n  {\n    path:'welcome',\n    component: WelcomeComponent,\n    canActivate: [RouteGuardService]\n  },\n  {\n    path:'logout',\n    component: LogoutComponent,\n    canActivate: [RouteGuardService]\n  },\n  {\n    path:'joinMeeting',\n    component: JoinMeetingComponent,\n    canActivate: [RouteGuardService]\n  },\n  {\n    path: 'hostMeeting',\n    component: HostMeetingComponent,\n    canActivate: [RouteGuardService]\n  },\n  {\n    path: 'otp',\n    component: OtpComponent,\n  },\n  {\n    path:'forgotpassword',\n    component: ForgotPasswordComponent\n  },\n  {\n    path: 'changePassword',\n    component: ChangePasswordComponent,\n    canActivate:[RouteGuardService]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Umbeo Technologies';\n}\n","<app-header></app-header>\r\n\r\n<div>\r\n\r\n    <router-outlet></router-outlet>\r\n\r\n    \r\n</div>\r\n\r\n<app-footer></app-footer>\r\n","// export const URI= \"http://Ummodi-env.eba-tt5qhrb5.us-east-1.elasticbeanstalk.com:8080\";\r\n// export const URI= \"http://localhost:8080\";\r\nexport const URI= \"http://umbeoapploadbalancer-1151668968.us-east-2.elb.amazonaws.com\";\r\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { RegisterComponent } from './Components/register/register.component';\nimport { LoginComponent } from './Components/login/login.component';\nimport { HeaderComponent } from './Components/header/header.component';\nimport { FooterComponent } from './Components/footer/footer.component';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { WelcomeComponent } from './Components/welcome/welcome.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { LogoutComponent } from './Components/logout/logout.component';\nimport { HttpInterceptorJwtService } from './Services/Interceptors/http-interceptor-jwt.service';\n\nimport { ModalModule } from './_modal';\n\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { JoinMeetingComponent } from './Components/join-meeting/join-meeting.component';\n\nimport { CookieService } from 'ngx-cookie-service';\nimport { HostMeetingComponent } from './Components/host-meeting/host-meeting.component';\nimport { OtpComponent } from './Components/otp/otp.component';\nimport { ForgotPasswordComponent } from './Components/forgot-password/forgot-password.component';\nimport { ChangePasswordComponent } from './Components/change-password/change-password.component'\n\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    RegisterComponent,\n    LoginComponent,\n    HeaderComponent,\n    FooterComponent,\n    WelcomeComponent,\n    LogoutComponent,\n    JoinMeetingComponent,\n    HostMeetingComponent,\n    OtpComponent,\n    ForgotPasswordComponent,\n    ChangePasswordComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule,\n    ModalModule,\n    BrowserAnimationsModule,\n  ],\n  providers: [\n    {provide: HTTP_INTERCEPTORS, useClass: HttpInterceptorJwtService, multi: true},\n    CookieService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}