{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/Components/change-password/change-password.component.ts","./src/app/Components/change-password/change-password.component.html","./src/app/Components/footer/footer.component.ts","./src/app/Components/footer/footer.component.html","./src/app/Components/forgot-password/forgot-password.component.ts","./src/app/Components/forgot-password/forgot-password.component.html","./src/app/Components/header/header.component.ts","./src/app/Components/header/header.component.html","./src/app/Components/host-meeting/host-meeting.component.ts","./src/app/Components/host-meeting/host-meeting.component.html","./src/app/Components/join-meeting/join-meeting.component.ts","./src/app/Components/join-meeting/join-meeting.component.html","./src/app/Components/login/login.component.ts","./src/app/Components/login/login.component.html","./src/app/Components/logout/logout.component.ts","./src/app/Components/logout/logout.component.html","./src/app/Components/otp/otp.component.ts","./src/app/Components/otp/otp.component.html","./src/app/Components/register/register.component.ts","./src/app/Components/register/register.component.html","./src/app/Components/welcome/welcome.component.ts","./src/app/Components/welcome/welcome.component.html","./src/app/Services/Guard/route-guard.service.ts","./src/app/Services/Interceptors/http-interceptor-jwt.service.ts","./src/app/Services/jwtauthentication.service.ts","./src/app/_modal/index.ts","./src/app/_modal/modal.component.ts","./src/app/_modal/modal.component.html","./src/app/_modal/modal.module.ts","./src/app/_modal/modal.service.ts","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.constant.ts","./src/app/app.module.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit } from '@angular/core';\nimport { JWTAuthenticationService } from 'src/app/Services/jwtauthentication.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-change-password',\n  templateUrl: './change-password.component.html',\n  styleUrls: ['./change-password.component.css']\n})\nexport class ChangePasswordComponent implements OnInit {\n\n  user:any;\n  password:any;\n\n\n  constructor( private jwtService: JWTAuthenticationService, private router:Router) { }\n\n  ngOnInit(): void {\n\n    this.user= this.jwtService.getAuthUser();\n\n  }\n\n  changePassword():any{\n\n    this.jwtService.changePassword({\n      \"username\":this.user,\n      \"password\":this.password\n    }).subscribe((response:any)=>{\n      if(response==true){\n        this.router.navigate(['welcome']);\n      }\n      else{\n        console.log(\"Some Error Occurred\");\n      }\n    },(error:any)=>{\n      console.log(error);\n    }\n    )\n\n  }\n\n}\n","<body>\n    <div id=\"login\">\n    <h3 class=\"text-center text-black pt-5\">Please Login</h3>\n    <div class=\"container\">\n        <div id=\"login-row\" class=\"row justify-content-center align-items-center\">\n            <div id=\"login-column\" class=\"col-md-6\">\n                <div id=\"login-box\" class=\"col-md-12\">\n                    <!-- <div class=\"alert alert-warning\" *ngIf=\" todoForm.dirty && todoForm.invalid\">Please Enter Valid Values</div> -->\n                    <!-- <div class=\"alert alert-warning\" *ngIf=\" name.dirty && name.invalid\">Username cannot be empty</div>\n                    <div class=\"alert alert-warning\" *ngIf=\" pass.dirty && pass.invalid\">Password cannot be empty</div> -->\n                    <form id=\"login-form\" class=\"form\" #login=\"ngForm\" (ngSubmit)=\"!login.invalid && changePassword()\">\n                        <h3 class=\"text-center text-info\">Login</h3>\n                        <div class=\"form-group\">\n                            <label for=\"username\" class=\"text-info\">Email</label><br>\n                            <input type=\"text\" #name=\"ngModel\" [(ngModel)]=\"user\" name=\"user\" id=\"username\" class=\"form-control\" readonly>\n                        </div>\n                        <div class=\"form-group\">\n                            <label for=\"password\" class=\"text-info\">Password</label><br>\n                            <input type=\"password\" #pass=\"ngModel\" [(ngModel)]=\"password\" name=\"password\" id=\"password\" class=\"form-control\" required=\"required\" minlength=\"5\">\n                            <div *ngIf=\"pass.invalid && (pass.dirty || pass.touched)\">\n\n                                <div *ngIf=\"pass.errors.required\" style=\"color: red;\">\n                                  Password is required.\n                                </div>\n                                <div *ngIf=\"pass.errors.minlength\" style=\"color: red;\">\n                                    Password needs to be of minimum 5 characters\n                                  </div>\n                              </div>\n                        </div>\n                        <div class=\"form-group\">\n                            <br>                \n                            <input type=\"submit\" name=\"submit\" class=\"btn btn-info btn-md\" value=\"Update\">\n                        </div><br>\n                    </form>\n                    <br><br>\n                </div>\n            </div>\n        </div>\n    </div>\n    </div>\n     <!-- <script type=\"text/javascript\">\n        function disappear() { \n                setTimeout(function() { \n                    $('#disa').fadeOut('fast'); \n                }, 1000);\n</script> -->\n</body>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<footer class=\"footer\">\n    <div class=\"container white\">\n\n        All rights reserved 2020\n\n\n    </div>\n</footer>\n\n","import { Component, OnInit } from '@angular/core';\nimport { JWTAuthenticationService } from 'src/app/Services/jwtauthentication.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-forgot-password',\n  templateUrl: './forgot-password.component.html',\n  styleUrls: ['./forgot-password.component.css']\n})\nexport class ForgotPasswordComponent implements OnInit {\n\n  username:any;\n\n  error:any=false;\n\n  x:string=\"1234567890ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\n\n  index:any;\n\n  upp:any;\n  c:any;\n  password:string=\"\"\n\n\n  constructor( private jwtService: JWTAuthenticationService, private router:Router) { }\n\n  ngOnInit(): void {\n  }\n\n  generatePassword():any{\n\n    for(this.index=1; this.index<=10; this.index++){\n      this.c = Math.floor((Math.random()*(this.x.length))+0);\n      this.password+=this.x.charAt(this.c);\n    }\n\n  }\n\n  forgotPassword():any{\n\n    this.generatePassword();\n\n    this.jwtService.forgotPassword({\n      \"username\":this.username,\n      \"password\":this.password\n    }).subscribe((response:any)=>{\n      if(response==true){\n        this.error=false;\n        this.router.navigate(['login']);\n      }\n      else{\n        this.error=true;\n      }\n    },(error:any)=>{\n      console.log(error);\n    })\n\n\n\n  }\n\n\n}\n","<body>\n    <div id=\"login\">\n    <h3 class=\"text-center text-black pt-5\">Forgot Password</h3>\n    <div class=\"container\">\n        <div id=\"login-row\" class=\"row justify-content-center align-items-center\">\n            <div id=\"login-column\" class=\"col-md-6\">\n                <div id=\"login-box\" class=\"col-md-12\">\n                    <form id=\"login-form\" class=\"form\" #reg=\"ngForm\" (ngSubmit)=\"!reg.invalid && forgotPassword()\">\n                        <h3 class=\"text-center text-info\">Email Id</h3>\n                        <div class=\"form-group\">\n                            <label for=\"user\" class=\"text-info\">Email Id</label><br>\n                            <input type=\"text\" #n=\"ngModel\"  [(ngModel)]=\"username\" name=\"username\" id=\"user\" class=\"form-control\" required=\"required\">\n\n                            <div *ngIf=\"n.invalid && (n.dirty || n.touched)\" style=\"color: red;\">\n\n                                <div *ngIf=\"n.errors.required\">\n                                  Email Id is required.\n                                </div>\n                              </div>\n                        </div>\n                        \n                        <div class=\"form-group\">\n                            <br>\n                            <input type=\"submit\"  name=\"submit\" class=\"btn btn-info btn-md\" value=\"Reset\">\n                        </div>\n                    </form>\n                    <br>\n                    <!-- <pre class=\"alert alert-warning\" id=\"disa\" *ngIf=\"bool\">{{registered}}</pre> -->\n                    <pre class=\"alert alert-warning\" *ngIf=\"error\">Email Id is not registered</pre> \n                </div>\n            </div>\n        </div>\n    </div>\n    </div>\n</body>\n","import { Component, OnInit } from '@angular/core';\nimport { JWTAuthenticationService } from 'src/app/Services/jwtauthentication.service';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor(public jwtAuth: JWTAuthenticationService ) { }\n\n  ngOnInit(): void {\n  }\n}\n\nexport class Doctor{\n  constructor( public doctorId:number, public doctorname:string, public doctoremail:string, public designation:string) { }\n}\n","<header>\n  <nav class=\"navbar navbar-expand-lg navbar-dark dark\">\n    <a class=\"navbar-brand\" style=\"color: white;\">VEUBE</a>\n    <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarText\" aria-controls=\"navbarText\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n      <span class=\"navbar-toggler-icon\"></span>\n    </button>\n    <div class=\"collapse navbar-collapse\" id=\"navbarText\">\n      <ul class=\"navbar-nav mr-auto\">\n        <li class=\"nav-item active\">\n          <a class=\"nav-link\" routerLink=\"/welcome\" *ngIf=\"jwtAuth.isAuthenticated()\">Home <span class=\"sr-only\">(current)</span></a>\n        </li>\n        <li class=\"nav-item active\">\n          <a class=\"nav-link d\" *ngIf=\"jwtAuth.isAuthenticated()\" routerLink=\"joinMeeting\">Join Meeting\n            <span class=\"s\">Click here to Join Meeting</span>\n          </a>\n        </li>\n        <li class=\"nav-item active\">\n          <a class=\"nav-link ab\" *ngIf=\"jwtAuth.isAuthenticated()\" routerLink=\"hostMeeting\">Host Meeting\n            <span class=\"cd\">Click here to Host Meeting</span>\n          </a>\n        </li>\n        <li class=\"nav-item active\">\n          <a class=\"nav-link ef\" *ngIf=\"jwtAuth.isAuthenticated()\" routerLink=\"changePassword\">Change Password\n            <span class=\"gh\">Change Your Account Password</span>\n          </a>\n        </li>\n      </ul>\n    <ul class=\"navbar-nav navbar-right\">\n        <li class=\"nav-item\"> <a class=\"nav-link whi r\" style=\"color: white;\" href=\"#\" *ngIf=\"!jwtAuth.isAuthenticated()\">Login\n          <span class=\"p\">Login</span>\n        </a></li>\n\n        <li class=\"nav-item\"> <a class=\"nav-link whi m\" style=\"color: white;\" routerLink='/logout' href=\"#\" *ngIf=\"jwtAuth.isAuthenticated()\">Logout\n          <span class=\"n\">Logout</span>\n        </a></li>\n    </ul>\n    </div>\n  </nav>\n</header>\n\n\n\n","import { Component, OnInit } from '@angular/core';\nimport { JWTAuthenticationService } from 'src/app/Services/jwtauthentication.service';\n\n@Component({\n  selector: 'app-host-meeting',\n  templateUrl: './host-meeting.component.html',\n  styleUrls: ['./host-meeting.component.css']\n})\nexport class HostMeetingComponent implements OnInit {\n\n  username:any;\n  room:any;\n  error:any=false;\n  x:string=\"1234567890ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\n\n  index:any;\n  c:any;\n\n\n  constructor( private _service: JWTAuthenticationService) { }\n\n  ngOnInit(): void {\n\n    this.room=\"\"\n\n    this._service.getByUsername().subscribe((response:any)=>{\n      console.log(response)\n      this.username=response.name;\n    },(error:any)=>{\n      console.log(error);\n    })\n\n\n  }\n\n  generatePassword():any{\n\n    for(this.index=1; this.index<=7; this.index++){\n      this.c = Math.floor((Math.random()*(this.x.length))+0);\n      this.room+=this.x.charAt(this.c);\n    }\n  }\n\n  hostMeeting():any{\n\n    this.generatePassword();\n\n    this._service.addRoom(this.room, this.username).subscribe((response:any)=>{\n      if(response==true){\n        window.location.href = 'http://localhost:3000'+'?room='+this.room;\n        this.error=false;\n      }\n      else{\n        this.error=true;\n      }\n    })\n\n  }\n\n}\n","<!DOCTYPE html>\n<html>\n    <head>\n        <title>Chat Application</title>\n        <link rel=\"icon\" href=\"../../../assets/logo.PNG\">\n    </head>\n    <body>\n\n        <div class=\"centered-form\">\n            <div class=\"centered-form__box\">\n                <h1>Host Meeting</h1>\n                <form>\n                    <!-- <label>Host Name</label>\n                    <input type=\"text\" [(ngModel)]=\"username\" name=\"username\" placeholder=\"Host name\" required autocomplete=\"off\"> -->\n                    <label>Room</label>\n                    <input type=\"text\" [(ngModel)]=\"room\" name=\"room\" placeholder=\"Room\" required autocomplete=\"off\">\n                    <button (click)=\"hostMeeting()\">Host</button>\n                </form>\n                <br>\n                <pre class=\"alert alert-warning\" *ngIf=\"error\">Room already exists!!!</pre>\n            </div>\n        </div>\n    </body>\n</html>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { CookieService } from 'ngx-cookie-service';\nimport { JWTAuthenticationService } from 'src/app/Services/jwtauthentication.service';\n\n@Component({\n  selector: 'app-join-meeting',\n  templateUrl: './join-meeting.component.html',\n  styleUrls: ['./join-meeting.component.css']\n})\nexport class JoinMeetingComponent implements OnInit {\n\n  username:any;\n  room:any;\n  error:any=false;\n\n\n  constructor( private router : Router, private cookie:CookieService, private _service:JWTAuthenticationService) { }\n\n  ngOnInit(): void {\n\n    this.error=false;\n\n    this._service.getByUsername().subscribe((response:any)=>{\n      console.log(response)\n      this.username=response.name;\n    },(error:any)=>{\n      console.log(error);\n    })\n  }\n\n\n  joinMeeting():any{\n\n    this._service.joinRoom(this.room, this.username).subscribe((response:any)=>{\n      if(response==true){\n        window.location.href = 'http://localhost:3000/?'+'room='+this.room;\n        this.error=false;\n      }\n      else{\n        this.error=true;\n      }\n     \n    })    \n  }\n\n}\n","<!DOCTYPE html>\n<html>\n    <head>\n        <title>Chat Application</title>\n        <link rel=\"icon\" href=\"../../../assets/logo.PNG\">\n    </head>\n    <body>\n\n        <div class=\"centered-form\">\n            <div class=\"centered-form__box\">\n                <h1>Join</h1>\n                <form>\n                    <!-- <label>Display name</label>\n                    <input type=\"text\" [(ngModel)]=\"username\" name=\"username\" placeholder=\"Display name\" required autocomplete=\"off\"> -->\n                    <label>Room</label>\n                    <input type=\"text\" [(ngModel)]=\"room\" name=\"room\" placeholder=\"Room\" required autocomplete=\"off\">\n                    <button (click)=\"joinMeeting()\">Join</button>\n                </form>\n                <br>\n                <pre class=\"alert alert-warning\" *ngIf=\"error\">Room does not exist!!!</pre>\n            </div>\n        </div>\n    </body>\n</html>","import { Component, OnInit } from '@angular/core';\nimport { JWTAuthenticationService } from 'src/app/Services/jwtauthentication.service';\nimport { Router } from '@angular/router';\n\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  username:any;\n  name:any;\n  pass:any;\n  password:any;\n  invalidLogin:boolean;\n  message:string=\"Please enter valid credentials\";\n\n  constructor( private _service: JWTAuthenticationService, private router: Router) { }\n\n  ngOnInit(): void {\n  }\n\n  handleJWTLogin():any{\n    this._service.executeJWTAuthenticationService(this.username, this.password).subscribe((data:any)=>{\n      console.log(data);\n      this.invalidLogin=false;\n      this.router.navigate(['welcome']);\n    },\n    (error:any)=>{\n      console.log(error);\n      this.invalidLogin=true;\n    })\n  }\n}\n","<body>\n    <div id=\"login\">\n    <h3 class=\"text-center text-black pt-5\">Please Login</h3>\n    <div class=\"container\">\n        <div id=\"login-row\" class=\"row justify-content-center align-items-center\">\n            <div id=\"login-column\" class=\"col-md-6\">\n                <div id=\"login-box\" class=\"col-md-12\">\n                    <!-- <div class=\"alert alert-warning\" *ngIf=\" todoForm.dirty && todoForm.invalid\">Please Enter Valid Values</div> -->\n                    <!-- <div class=\"alert alert-warning\" *ngIf=\" name.dirty && name.invalid\">Username cannot be empty</div>\n                    <div class=\"alert alert-warning\" *ngIf=\" pass.dirty && pass.invalid\">Password cannot be empty</div> -->\n                    <form id=\"login-form\" class=\"form\" #login=\"ngForm\" (ngSubmit)=\"!login.invalid && handleJWTLogin()\">\n                        <h3 class=\"text-center text-info\">Login</h3>\n                        <div class=\"form-group\">\n                            <label for=\"username\" class=\"text-info\">Email</label><br>\n                            <input type=\"text\" #name=\"ngModel\" [(ngModel)]=\"username\" name=\"username\" id=\"username\" class=\"form-control\" required=\"required\">\n                            <div *ngIf=\"name.invalid && (name.dirty || name.touched)\" style=\"color: red;\">\n\n                                <div *ngIf=\"name.errors.required\">\n                                  User Name is required.\n                                </div>\n                              \n                              </div>\n                        </div>\n\n                        <div class=\"form-group\">\n                            <label for=\"password\" class=\"text-info\">Password</label><br>\n                            <input type=\"password\" #pass=\"ngModel\" [(ngModel)]=\"password\" name=\"password\" id=\"password\" class=\"form-control\" required=\"required\">\n                            <div *ngIf=\"pass.invalid && (pass.dirty || pass.touched)\">\n\n                                <div *ngIf=\"pass.errors.required\" style=\"color: red;\">\n                                  Password is required.\n                                </div>\n                              \n                              </div>\n                        </div>\n                        <div class=\"form-group\">\n                            <br>                \n                            <input type=\"submit\" name=\"submit\" class=\"btn btn-info btn-md\" value=\"Login\">\n                        </div><br>\n                        <div id=\"register-link\" class=\"text-right\">\n                            <a routerLink=\"/register\" class=\"text-info\">Register</a>\n                        </div>\n                        <br>\n                        <br><br><br>\n                        <div id=\"register-link\" class=\"text-right\">\n                            <a routerLink=\"/forgotpassword\" class=\"text-info\">Forgot Your Password</a>\n                        </div>\n                    </form>\n                    <br><br>\n                    <pre class=\"alert alert-warning\" id=\"disa\" *ngIf=\"invalidLogin\">{{message}}</pre>\n                </div>\n            </div>\n        </div>\n    </div>\n    </div>\n     <!-- <script type=\"text/javascript\">\n        function disappear() { \n                setTimeout(function() { \n                    $('#disa').fadeOut('fast'); \n                }, 1000);\n</script> -->\n</body>\n","import { Component, OnInit } from '@angular/core';\nimport { JWTAuthenticationService } from 'src/app/Services/jwtauthentication.service';\n\n@Component({\n  selector: 'app-logout',\n  templateUrl: './logout.component.html',\n  styleUrls: ['./logout.component.css']\n})\nexport class LogoutComponent implements OnInit {\n\n  constructor( private jwtAuth: JWTAuthenticationService) { }\n\n  ngOnInit(): void {\n    this.jwtAuth.logout();\n  }\n\n}\n","<body>\n<div class=\"container\">\n    <h3>Thank You for using our website</h3>\n</div>\n</body>","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { JWTAuthenticationService } from 'src/app/Services/jwtauthentication.service';\n\n@Component({\n  selector: 'app-otp',\n  templateUrl: './otp.component.html',\n  styleUrls: ['./otp.component.css']\n})\nexport class OtpComponent implements OnInit {\n\n  otp:any;\n  error:any=false;\n  upo:UPO;\n  data:any;\n  o:any;\n  send:any;\n  constructor( private ActiRouter: ActivatedRoute, private jwtService:JWTAuthenticationService, private router:Router) { }\n\n  ngOnInit(): void {\n\n\n    this.upo= new UPO(\"\",\"\",\"\",\"\");\n\n    this.ActiRouter.queryParams.subscribe((response:any)=>{\n      // this.upo.username= response.p1;\n      // this.upo.password= response.p2;\n      this.data=response;\n      console.log(response);\n    })\n\n    this.upo.username=this.data.p1;\n    this.upo.password=this.data.p2;\n    this.upo.name=this.data.p3;\n    this.o=this.data.p4;\n\n    this.send={\n      \"username\":this.upo.username,\n      \"otp\":this.o\n    }\n\n    setTimeout(()=>{\n      this.jwtService.deleteForOtp(this.send).subscribe((response:any)=>{\n        if(response==true){\n          console.log(\"Deletion Successful\");\n        }\n        else{\n          console.log(\"Some problem in deletion occured\");\n        }\n      },(error:any)=>{\n        console.log(error);\n      })\n    },300000);\n  }\n\n  // deleteOtp():any{\n  //   this.jwtService.deleteForOtp(this.send).subscribe((response:any)=>{\n  //     if(response==true){\n  //       console.log(\"Deletion Successful\");\n  //     }\n  //     else{\n  //       console.log(\"Some problem in deletion occured\");\n  //     }\n  //   },(error:any)=>{\n  //     console.log(error);\n\n  //   })\n  // }\n\n  submitOTP():any{\n\n    this.jwtService.registerotp(this.upo).subscribe((response:any)=>{\n      if(response==true){\n        this.error=false;\n        this.router.navigate(['login']);\n      }\n      else{\n        this.error=true;\n      }\n    },(error:any)=>{\n      console.log(error);\n    })\n\n  }\n\n}\n\nexport class UPO{\n  constructor( public username:string, public password:string, public otp:string, public name:string ) { }\n}\n","<body>\n    <div id=\"login\">\n    <h3 class=\"text-center text-black pt-5\">Please Enter Otp</h3>\n    <div class=\"container\">\n        <div id=\"login-row\" class=\"row justify-content-center align-items-center\">\n            <div id=\"login-column\" class=\"col-md-6\">\n                <div id=\"login-box\" class=\"col-md-12\">\n                    <form id=\"login-form\" class=\"form\" #reg=\"ngForm\" (ngSubmit)=\"!reg.invalid && submitOTP()\">\n                        <h3 class=\"text-center text-info\">Otp</h3>\n                        <h6 class=\"text-center text-info\">Otp is valid only for 5 minutes</h6>\n                        <div class=\"form-group\">\n                            <label for=\"username\" class=\"text-info\">OTP</label><br>\n                            <input type=\"text\" #n=\"ngModel\"  [(ngModel)]=\"upo.otp\" name=\"otp\" id=\"username\" class=\"form-control\" required=\"required\" minlength=\"7\" maxlength=\"7\">\n\n                            <div *ngIf=\"n.invalid && (n.dirty || n.touched)\" style=\"color: red;\">\n\n                                <div *ngIf=\"n.errors.required\">\n                                  Otp is required.\n                                </div>\n                                <div *ngIf=\"n.errors.minlength\">\n                                    Otp should be of 7 characters\n                                  </div>\n                                  <div *ngIf=\"n.errors.maxlength\">\n                                    Otp should be of 7 characters\n                                  </div>\n                              </div>\n                        </div>\n                        \n                        <div class=\"form-group\">\n                            <br>\n                            <input type=\"submit\"  name=\"submit\" class=\"btn btn-info btn-md\" value=\"Verify\">\n                        </div>\n                    </form>\n                    <br>\n                    <!-- <pre class=\"alert alert-warning\" id=\"disa\" *ngIf=\"bool\">{{registered}}</pre> -->\n                    <pre class=\"alert alert-warning\" *ngIf=\"error\">Invalid Otp entered</pre> \n                </div>\n            </div>\n        </div>\n    </div>\n    </div>\n</body>\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { JWTAuthenticationService } from 'src/app/Services/jwtauthentication.service';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n\n  register:Register;\n  otp:any;\n  m:any=\"\";\n  checker:any=\"\";\n  bool:boolean=false;\n  numbers:any= \"0123456789\";\n  err:boolean= false;\n  i:any;\n  o:string;\n  opt:string=\"\";\n  registered:string=\"Successfully Registered\";\n  error:string=\"Some Error Occured!! Please contact ADMIN!!!\"\n  confirm:any;\n  constructor( private _service: JWTAuthenticationService, private router:Router ) { }\n\n  ngOnInit(): void {\n    this.register= new Register(\"\",\"\",\"\",\"\");\n  \n  }\n\n  generateOtp(){\n\n\n    for(this.i=0; this.i<7; this.i++){\n      this.opt+=Math.floor(Math.random()*10)\n    }\n\n    return this.opt;\n    \n  }\n\n  RegisterUser():any{\n    this.checker=\"\";\n    this.o = this.generateOtp()\n    this.register.otp=this.o;\n    if(this.register.password==this.confirm){\n      console.log(this.register)\n      this._service.RegisteringUsers(this.register).subscribe((response:any)=>{\n        if(response==true){\n          this.bool=true;\n          this.err=false;\n          this.confirm=\"\";\n          this.router.navigate(['/otp'], {\n            queryParams: {p1:this.register.username, p2:this.register.password,p3:this.register.name,p4:this.register.otp},\n            skipLocationChange: true\n          });\n        }\n        else{\n          this.bool=false;\n          this.err=true;\n        }\n      })\n    }\n    else{\n      this.checker= \"Passwords do not match\";\n      this.confirm=\"\";\n    }\n    \n  }\n}\n\nexport class Register{\n  constructor( public name:string, public username:string, public password:string, public otp:string) { }\n}\n","<body>\n    <div id=\"login\">\n    <h3 class=\"text-center text-black pt-5\">Please Register</h3>\n    <div class=\"container\">\n        <div id=\"login-row\" class=\"row justify-content-center align-items-center\">\n            <div id=\"login-column\" class=\"col-md-6\">\n                <div id=\"login-box\" class=\"col-md-12\">\n                    <form id=\"login-form\" class=\"form\" #reg=\"ngForm\" (ngSubmit)=\"!reg.invalid && RegisterUser()\">\n                        <h3 class=\"text-center text-info\">Register</h3>\n                        <div class=\"form-group\">\n                            <label for=\"username\" class=\"text-info\">Name</label><br>\n                            <input type=\"text\" #n=\"ngModel\"  [(ngModel)]=\"register.name\" name=\"name\" id=\"username\" class=\"form-control\" required=\"required\">\n\n                            <div *ngIf=\"n.invalid && (n.dirty || n.touched)\" style=\"color: red;\">\n\n                                <div *ngIf=\"n.errors.required\">\n                                  Name is required.\n                                </div>\n                              \n                        </div>\n                        </div>\n\n                        <div class=\"form-group\">\n                        <label for=\"username\" class=\"text-info\">Email</label><br>\n                            <input type=\"text\" #name=\"ngModel\"  [(ngModel)]=\"register.username\" name=\"username\" id=\"username\" class=\"form-control\" required=\"required\" minlength=\"5\">\n                            <div *ngIf=\"name.invalid && (name.dirty || name.touched)\" style=\"color: red;\">\n\n                                <div *ngIf=\"name.errors.required\">\n                                  User Name is required.\n                                </div>\n                                <div *ngIf=\"name.errors.minlength\">\n                                    User Name must be of minimum 5 characters\n                                  </div>\n                              </div>\n                        </div>\n\n                        <div class=\"form-group\">\n                            <label for=\"username\" class=\"text-info\">Image Upload</label><br>\n                                <input type=\"file\" id=\"username\" class=\"form-control\">\n                            </div>\n                    \n                        <div class=\"form-group\">\n                            <label for=\"password\" class=\"text-info\">Password</label><br>\n                            <input type=\"password\" #pass=\"ngModel\" [(ngModel)]=\"register.password\" name=\"password\" id=\"password\" class=\"form-control\" required=\"required\" minlength=\"5\">\n                            <div *ngIf=\"pass.invalid && (pass.dirty || pass.touched)\" style=\"color: red;\">\n\n                                <div *ngIf=\"pass.errors.required\">\n                                  Password is required.\n                                </div>\n                                <div *ngIf=\"pass.errors.minlength\">\n                                    Password must be of minimum 5 characters\n                                  </div>\n                              </div>\n                        </div>\n                        <div class=\"form-group\">\n                            <label for=\"password\" class=\"text-info\">Confirm Password</label><br>\n                            <input type=\"password\"#c=\"ngModel\" id=\"password\" class=\"form-control\" name=\"confirm\" [(ngModel)]=\"confirm\">\n                            <div *ngIf=\"checker!=null\" style=\"color: red;\">{{checker}}</div>\n                        </div>\n                        <div class=\"form-group\">\n                        \n                            <input type=\"submit\"  name=\"submit\" class=\"btn btn-info btn-md\" value=\"Register\">\n                        </div><br>\n                        <div id=\"register-link\" class=\"text-right\">\n                            <a routerLink=\"/login\" class=\"text-info\">Login</a>\n                        </div>\n                    </form>\n                    <br><br>\n                    <pre class=\"alert alert-warning\" id=\"disa\" *ngIf=\"bool\">{{registered}}</pre>\n                    <pre class=\"alert alert-warning\" id=\"disa\" *ngIf=\"err\">{{error}}</pre>\n                </div>\n            </div>\n        </div>\n    </div>\n    </div>\n</body>\n","import { Component, OnInit } from '@angular/core';\nimport { JWTAuthenticationService } from 'src/app/Services/jwtauthentication.service';\n\n@Component({\n  selector: 'app-welcome',\n  templateUrl: './welcome.component.html',\n  styleUrls: ['./welcome.component.css']\n})\nexport class WelcomeComponent implements OnInit {\n\n  page = {\n    title: 'Home',\n    subtitle: 'Welcome Home!',\n    content: 'Some home content.',\n    image: 'assets/bg00.jpeg'\n  };\n\n  data:any;\n  user:any;\n\n  constructor( private _service: JWTAuthenticationService) { }\n\n  ngOnInit(): void {\n\n    this.user= this._service.getAuthenticatedUser();\n\n    }\n  \n}\n","<body>\n    <div class=\"container\">\n<section class=\"hero is-info is-fullheight is-bold\">\n    <div class=\"hero-body\">\n\n      <h1 class=\"title\">Welcome {{user}}</h1>\n\n    \n    </div>\n    </section>\n    </div>\n    </body>","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\nimport { JWTAuthenticationService } from '../jwtauthentication.service';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RouteGuardService implements CanActivate {\n\n  constructor( private jwtAuthentication : JWTAuthenticationService, private router: Router) { }\n\n\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot):boolean {\n    if(this.jwtAuthentication.isAuthenticated()){\n      return true;\n    }\n\n    this.router.navigate(['login']);\n    return false;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpInterceptor, HttpRequest, HttpHandler } from '@angular/common/http';\nimport { JWTAuthenticationService } from '../jwtauthentication.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HttpInterceptorJwtService implements HttpInterceptor {\n\n  constructor( private jwtAuthenticationService : JWTAuthenticationService) { }\n\n  intercept(request: HttpRequest<any>, next: HttpHandler){\n    let authenticationToken = this.jwtAuthenticationService.getAuthenticationToken();\n    let username = this.jwtAuthenticationService.getAuthenticatedUser();\n\n    let basicAuthHeader = authenticationToken;\n    if(authenticationToken && username)\n    {\n      request= request.clone({\n        setHeaders:{\n          Authorization: basicAuthHeader\n        }\n      })\n    }\n    return next.handle(request);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\nimport { URI } from '../app.constant';\nexport const USER= 'auth-user';\nexport const TOKEN='auth-token';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class JWTAuthenticationService {\n\n  b:any;\n\n  constructor(private _http: HttpClient) { }\n\n  executeJWTAuthenticationService(username:any,password:any):any{\n\n    return  this._http.post<any>(`${URI}/authenticate`,{\n      username,\n      password\n    }).pipe(map(data=>{\n      sessionStorage.setItem(USER,username);\n      sessionStorage.setItem(TOKEN,`Bearer ${data.token}`);\n      return data;\n    }));\n  }\n\n  RegisteringUsers(data:any):any{\n    return this._http.post(`${URI}/otpgenerated`,data);\n  }\n\n\n  deleteForOtp(data:any):any{\n    return this._http.post(`${URI}/deleteForOtp`,data);\n  }\n\n\n  isAuthenticated(){\n    let user = sessionStorage.getItem(USER);\n    return !(user==null);\n  }\n  getAuthUser():any{\n    return sessionStorage.getItem(USER);\n  }\n\n  registerotp(data:any):any{\n    return this._http.post(`${URI}/register`,data);\n  }\n\n  getByUsername():any{\n    let username = sessionStorage.getItem('auth-user');\n    const u= { \"username\": username}\n    console.log(u)\n    return this._http.post(`${URI}/getUsername`,u);\n  }\n\n  changePassword(data:any):any{\n    return this._http.post(`${URI}/changePassword`,data);\n  }\n\n\n  forgotPassword(data:any):any{\n    return this._http.post(`${URI}/forgotPassword`,data);\n  }\n\n\n  addRoom(room:any, use:any):any{\n    let username = sessionStorage.getItem('auth-user');\n    return this._http.post(`${URI}/addRooms`,{\n      \"username\":username,\n      \"room\":room,\n      \"name\":use\n    });\n  }\n\n  joinRoom(room:any, use:any):any{\n    let username = sessionStorage.getItem('auth-user');\n    return this._http.post(`${URI}/joinRooms`,{\n      \"username\":username,\n      \"room\":room,\n      \"name\":use\n    })\n  }\n\n\n\n  // executeAuthenticationService(username:any,password:any):any{\n  //   let basicAuthHeader= \"Basic \"+window.btoa(username+':'+ password);\n  //   let headers= new HttpHeaders({\n  //     Authorization: basicAuthHeader\n  //   })\n  //   return  this._http.get<AuthenticationBean>(`${URI}/basicAuth`,{headers}).pipe(map(data=>{\n  //     sessionStorage.setItem(USER,username);\n  //     sessionStorage.setItem(TOKEN,basicAuthHeader);\n  //     return data;\n  //   }));\n  // }\n\n  getAuthenticatedUser():any{\n    return sessionStorage.getItem(USER);\n  }\n\n  getAuthenticationToken():any{\n    return sessionStorage.getItem(TOKEN);\n  }\n\n  logout(){\n    sessionStorage.removeItem(USER);\n    sessionStorage.removeItem(TOKEN);\n  }\n}\n\nexport class AuthenticationBean{\n  constructor(public message:string) { }\n}\n","export * from './modal.module';\r\nexport * from './modal.service';","import { Component, ViewEncapsulation, ElementRef, Input, OnInit, OnDestroy } from '@angular/core';\r\n\r\nimport { ModalService } from './modal.service';\r\n\r\n@Component({ \r\n    selector: 'jw-modal', \r\n    templateUrl: 'modal.component.html', \r\n    styleUrls: ['modal.component.less'],\r\n    encapsulation: ViewEncapsulation.None\r\n})\r\nexport class ModalComponent implements OnInit, OnDestroy {\r\n    @Input() id: string;\r\n    private element: any;\r\n\r\n    constructor(private modalService: ModalService, private el: ElementRef) {\r\n        this.element = el.nativeElement;\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        // ensure id attribute exists\r\n        if (!this.id) {\r\n            console.error('modal must have an id');\r\n            return;\r\n        }\r\n\r\n        // move element to bottom of page (just before </body>) so it can be displayed above everything else\r\n        document.body.appendChild(this.element);\r\n\r\n        // close modal on background click\r\n        this.element.addEventListener('click', el => {\r\n            if (el.target.className === 'jw-modal') {\r\n                this.close();\r\n            }\r\n        });\r\n\r\n        // add self (this modal instance) to the modal service so it's accessible from controllers\r\n        this.modalService.add(this);\r\n    }\r\n\r\n    // remove self from modal service when component is destroyed\r\n    ngOnDestroy(): void {\r\n        this.modalService.remove(this.id);\r\n        this.element.remove();\r\n    }\r\n\r\n    // open modal\r\n    open(): void {\r\n        this.element.style.display = 'block';\r\n        document.body.classList.add('jw-modal-open');\r\n    }\r\n\r\n    // close modal\r\n    close(): void {\r\n        this.element.style.display = 'none';\r\n        document.body.classList.remove('jw-modal-open');\r\n    }\r\n}","\r\n﻿<div class=\"jw-modal\">\r\n    <div class=\"jw-modal-body\">\r\n        <ng-content></ng-content>\r\n    </div>\r\n</div>\r\n<div class=\"jw-modal-background\"></div>","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { ModalComponent } from './modal.component';\r\n\r\n@NgModule({\r\n    imports: [CommonModule],\r\n    declarations: [ModalComponent],\r\n    exports: [ModalComponent]\r\n})\r\nexport class ModalModule { }","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class ModalService {\r\n    private modals: any[] = [];\r\n\r\n    add(modal: any) {\r\n        // add modal to array of active modals\r\n        this.modals.push(modal);\r\n    }\r\n\r\n    remove(id: string) {\r\n        // remove modal from array of active modals\r\n        this.modals = this.modals.filter(x => x.id !== id);\r\n    }\r\n\r\n    open(id: string) {\r\n        // open modal specified by id\r\n        const modal = this.modals.find(x => x.id === id);\r\n        modal.open();\r\n    }\r\n\r\n    close(id: string) {\r\n        // close modal specified by id\r\n        const modal = this.modals.find(x => x.id === id);\r\n        modal.close();\r\n    }\r\n}","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginComponent } from './Components/login/login.component';\nimport { RegisterComponent } from './Components/register/register.component';\nimport { WelcomeComponent } from './Components/welcome/welcome.component';\nimport { LogoutComponent } from './Components/logout/logout.component';\nimport { RouteGuardService } from './Services/Guard/route-guard.service';\nimport { JoinMeetingComponent } from './Components/join-meeting/join-meeting.component';\nimport { url } from 'inspector';\nimport { HostMeetingComponent } from './Components/host-meeting/host-meeting.component';\nimport { OtpComponent } from './Components/otp/otp.component';\nimport { ForgotPasswordComponent } from './Components/forgot-password/forgot-password.component';\nimport { ChangePasswordComponent } from './Components/change-password/change-password.component';\n\n\nconst routes: Routes = [\n  {\n    path: '',\n    pathMatch: 'full',\n    redirectTo: \"login\"\n  },\n  {\n    path:'login',\n    component: LoginComponent\n  },\n  {\n    path:'register',\n    component: RegisterComponent\n  },\n  {\n    path:'welcome',\n    component: WelcomeComponent,\n    canActivate: [RouteGuardService]\n  },\n  {\n    path:'logout',\n    component: LogoutComponent,\n    canActivate: [RouteGuardService]\n  },\n  {\n    path:'joinMeeting',\n    component: JoinMeetingComponent,\n    canActivate: [RouteGuardService]\n  },\n  {\n    path: 'hostMeeting',\n    component: HostMeetingComponent,\n    canActivate: [RouteGuardService]\n  },\n  {\n    path: 'otp',\n    component: OtpComponent,\n  },\n  {\n    path:'forgotpassword',\n    component: ForgotPasswordComponent\n  },\n  {\n    path: 'changePassword',\n    component: ChangePasswordComponent,\n    canActivate:[RouteGuardService]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Umbeo Technologies';\n}\n","<app-header></app-header>\r\n\r\n<div>\r\n\r\n    <router-outlet></router-outlet>\r\n\r\n    \r\n</div>\r\n\r\n<app-footer></app-footer>\r\n","// export const URI= \"http://Ummodi-env.eba-tt5qhrb5.us-east-1.elasticbeanstalk.com:8080\";\r\n// export const URI= \"http://localhost:8080\";\r\nexport const URI= \"http://umbeoapploadbalancer-1151668968.us-east-2.elb.amazonaws.com\";\r\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { RegisterComponent } from './Components/register/register.component';\nimport { LoginComponent } from './Components/login/login.component';\nimport { HeaderComponent } from './Components/header/header.component';\nimport { FooterComponent } from './Components/footer/footer.component';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { WelcomeComponent } from './Components/welcome/welcome.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { LogoutComponent } from './Components/logout/logout.component';\nimport { HttpInterceptorJwtService } from './Services/Interceptors/http-interceptor-jwt.service';\n\nimport { ModalModule } from './_modal';\n\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { JoinMeetingComponent } from './Components/join-meeting/join-meeting.component';\n\nimport { CookieService } from 'ngx-cookie-service';\nimport { HostMeetingComponent } from './Components/host-meeting/host-meeting.component';\nimport { OtpComponent } from './Components/otp/otp.component';\nimport { ForgotPasswordComponent } from './Components/forgot-password/forgot-password.component';\nimport { ChangePasswordComponent } from './Components/change-password/change-password.component'\n\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    RegisterComponent,\n    LoginComponent,\n    HeaderComponent,\n    FooterComponent,\n    WelcomeComponent,\n    LogoutComponent,\n    JoinMeetingComponent,\n    HostMeetingComponent,\n    OtpComponent,\n    ForgotPasswordComponent,\n    ChangePasswordComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule,\n    ModalModule,\n    BrowserAnimationsModule,\n  ],\n  providers: [\n    {provide: HTTP_INTERCEPTORS, useClass: HttpInterceptorJwtService, multi: true},\n    CookieService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}